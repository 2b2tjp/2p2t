From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 5 Feb 2017 19:17:28 -0500
Subject: [PATCH] Shame on you Mojang

Someone wrote some horrible code that throws a world accessing task
onto the HTTP DOWNLOADER Thread Pool, for an activity that is not even
heavy enough to warrant async operation.

This then triggers async chunk loads!

What in the hell were you thinking?

diff --git a/src/main/java/net/minecraft/server/BlockBeacon.java b/src/main/java/net/minecraft/server/BlockBeacon.java
index f07ac01860c4e59b077820b43de43a13d4a09647..21075974df7f6945d8944b2ec0263fe755278c28 100644
--- a/src/main/java/net/minecraft/server/BlockBeacon.java
+++ b/src/main/java/net/minecraft/server/BlockBeacon.java
@@ -62,8 +62,8 @@ public class BlockBeacon extends BlockTileEntity {
     }
 
     public static void c(final World world, final BlockPosition blockposition) {
-        HttpUtilities.a.submit(new Runnable() {
-            public void run() {
+        /*HttpUtilities.a.submit(new Runnable() {
+            public void run() {*/ // Paper
                 Chunk chunk = world.getChunkAtWorldCoords(blockposition);
 
                 for (int i = blockposition.getY() - 1; i >= 0; --i) {
@@ -76,8 +76,8 @@ public class BlockBeacon extends BlockTileEntity {
                     IBlockData iblockdata = world.getType(blockposition1);
 
                     if (iblockdata.getBlock() == Blocks.BEACON) {
-                        ((WorldServer) world).postToMainThread(new Runnable() {
-                            public void run() {
+                        /*((WorldServer) world).postToMainThread(new Runnable() {
+                            public void run() {*/ // Paper
                                 TileEntity tileentity = world.getTileEntity(blockposition);
 
                                 if (tileentity instanceof TileEntityBeacon) {
@@ -85,12 +85,12 @@ public class BlockBeacon extends BlockTileEntity {
                                     world.playBlockAction(blockposition, Blocks.BEACON, 1, 0);
                                 }
 
-                            }
-                        });
+                            /*}
+                        });*/ // Paper
                     }
                 }
 
-            }
-        });
+            /*}
+        });*/ // Paper
     }
 }
