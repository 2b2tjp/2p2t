From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: hp34 <z@toshimichi.net>
Date: Fri, 5 Mar 2021 01:19:42 +0900
Subject: [PATCH] Fix Packet Fly


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index d268be30d6ababbe2cbcc9bdd84158901548ca15..4f03599a423deb6b8031ca4718804ca06ec66075 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1,16 +1,12 @@
 package net.minecraft.server;
 
-import com.google.common.collect.Lists;
 import com.google.common.primitives.Doubles;
 import com.google.common.primitives.Floats;
-import com.google.common.util.concurrent.Futures;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.Iterator;
-import java.util.List;
 import java.util.Set;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
@@ -133,6 +129,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
     private float lastYaw = Float.MAX_VALUE;
     private boolean justTeleported = false;
     private boolean hasMoved; // Spigot
+    private boolean lagbackTeleport; // 2p2t
 
     public CraftPlayer getPlayer() {
         return (this.player == null) ? null : (CraftPlayer) this.player.getBukkitEntity();
@@ -472,6 +469,15 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
     public void a(PacketPlayInTeleportAccept packetplayinteleportaccept) {
         PlayerConnectionUtils.ensureMainThread(packetplayinteleportaccept, this, this.player.x());
+        // 2p2t start
+        if (packetplayinteleportaccept.a() == this.teleportAwait && this.lagbackTeleport) {
+            if (++this.teleportAwait == Integer.MAX_VALUE) {
+                this.teleportAwait = 0;
+            }
+            this.lagbackTeleport = false;
+            return;
+        }
+        // 2p2t end
         if (packetplayinteleportaccept.a() == this.teleportAwait && this.teleportPos != null) { // CraftBukkit
             this.player.setLocation(this.teleportPos.x, this.teleportPos.y, this.teleportPos.z, this.player.yaw, this.player.pitch);
             if (this.player.L()) {
@@ -601,7 +607,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                                 if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(this.player.getName()))) { // Spigot
                                 // CraftBukkit end
                                     PlayerConnection.LOGGER.warn("{} moved too quickly! {},{},{}", this.player.getName(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
-                                    this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
+                                    // 2p2t start
+                                    // this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
+                                    sendPacket(new PacketPlayOutPosition(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch, Collections.emptySet(), teleportAwait));
+                                    this.lagbackTeleport = true;
+                                    // 2p2t end
                                     return;
                                 }
                             }
